@model DataUploadClient.Controllers.SummaryModel
@{
    ViewBag.Title = "Summary";
}

<h2>Summary</h2>

<div>
<table>
    <tr>
        <td>@Html.Label("testNameLabel","Test Name:", new { @class="summaryLabel"})</td>
        <td>@Html.Label("testNameValueLabel",Model.test.TestName, new { @class="summaryValue"})</td>
    </tr>
    <tr>
        <td>@Html.Label("testTypeLabel", "Test Type:", new { @class="summaryLabel"})</td>
        <td>@Html.Label("testTypeValueLabel",Model.testType, new { @class="summaryValue"})</td>
    </tr>
    <tr>
        <td>@Html.Label("fileNameLabel", "File Name:", new { @class="summaryLabel"})</td>
        <td>@Html.Label("fileNameValueLabel", Model.fileName, new { @class="summaryValue"})</td>
    </tr>
    <tr>
        <td>@Html.Label("downloadLabel", "Download Excel File:", new { @class="summaryLabel"})</td>
        <td> @Html.ActionLink("Download Excel File", "CompletedDownload", new { fileName = Model.fileName }, new { @class = "summaryValue" })</td>
    </tr>

</table>

</div>

<div>
   

</div>

@if (Model.cycler == "Arbin" || Model.cycler == "Firing Circuits")
{
    <div  class="float-left">
        @if (Model.cycler == "Arbin")
        {
            if (Model.testType == "CONDITIONING")
            {
                Html.RenderAction("buildConditioningChargeChart", Model.test);
            }
            else
            {
                Html.RenderAction("buildFormationChargeChart", Model.test);
            }
        }
        else if (Model.cycler == "Firing Circuits")
        {
            Html.RenderAction("buildFiringCircuitsConditioningChargeChart", Model.test);
        }
    </div>

    <div class="float-right">
        @if (Model.cycler == "Arbin")
        {
            if (Model.testType == "CONDITIONING")
            {
                Html.RenderAction("buildConditioningImpedanceChart", Model.test);
            }
        }
        else if (Model.cycler == "Firing Circuits")
        {
            Html.RenderAction("buildFiringCircuitsConditioningImpedanceChart", Model.test);
        }
    </div>
}
else if (Model.cycler == "PEC")
{
    foreach (string key in ((DataUploadApi.model.PECTest) Model.test).TestResults.Keys)
    {
         <div  class="float-left">
                @{ Html.RenderAction("buildPECConditioningChargeChart", "DataUpload", new { test = Model.test, key = key }); }
        </div>
        <div class="float-right">
            @{ Html.RenderAction("buildPECConditioningImpedanceChart", "DataUpload", new { test = Model.test, key = key }); }          
        </div>
    <br />
    }
}


<div style="clear:both;"></div>

<div class="float-left" style="margin-right: 25%;">
            @Html.ActionLink("Home", "Index", "DataView",new { @class = "uploadButton" })

</div>
